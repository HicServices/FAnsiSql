name: .NET Core

on:
  push

env:
  MSSQL_SA_PASSWORD: "YourStrong!Passw0rd"
  ACCEPT_EULA: "Y"
  MSSQL_PID: "developer"
  
jobs:  
  build:

    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: pgpass4291
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Disable write flush for CI runs
      run: sudo apt-get install -y libeatmydata1 apt-transport-https curl
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Install Sql Server
      run: |
        wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        sudo add-apt-repository "$(wget -qO- https://packages.microsoft.com/config/ubuntu/20.04/mssql-server-2019.list)"
        sudo apt-get install -y --no-install-recommends postgresql mssql-tools mssql-server
        sudo -E /opt/mssql/bin/mssql-conf -n setup accept-eula

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      if: false
    - name: Prep for MySQL bisection
      if: false
      run: |
        export PATH=/usr/lib/ccache:$PATH
        git clone https://github.com/mysql/mysql-server.git
        cd mysql-server
        mkdir build
        cd build
        cmake .. -DDOWNLOAD_BOOST=1 -DWITH_BOOST=$HOME/my_boost
        make -sj`nproc`
    - name: Setup upterm session
      uses: lhotari/action-upterm@v1
      if: false

    - name: MySQL
      run: |
        sed -i'' -e 's|</TestDatabases>|<TestDatabase><DatabaseType>PostgreSql</DatabaseType><ConnectionString>User ID=postgres;Password=pgpass4291;Host=127.0.0.1;Port=5432</ConnectionString></TestDatabase></TestDatabases>|' Tests/FAnsiTests/TestDatabases.xml
        sed -i'' -e 's/Pwd=;SslMode=None/Pwd=root;AllowPublicKeyRetrieval=true/' Tests/FAnsiTests/TestDatabases.xml
        sudo systemctl start mysql.service

        #sudo curl -o /etc/apt/trusted.gpg.d/mariadb_release_signing_key.asc 'https://mariadb.org/mariadb_release_signing_key.asc'
        #sudo sh -c "echo 'deb https://mirrors.xtom.com/mariadb/repo/10.9/ubuntu focal main' >>/etc/apt/sources.list"
        #sudo apt-get update
        #sudo apt-get install mariadb-server
        #sudo mysql -uroot <<EOM
        #ALTER USER 'root'@'localhost' IDENTIFIED BY 'root';
        #EOM
    - name: Test
      run: dotnet --logger "console;verbosity=minimal" --nologo
    - name: Pack
      run: |
        mkdir -p NuGet/bin
        ln -sf Release/netstandard2.1 NuGet/bin/
        dotnet pack NuGet/FAnsi.NuGet.csproj -c Release --include-source --include-symbols --nologo -p:NuspecFile=`pwd`/NuGet/FAnsi.NuGet.nuspec -p:NuspecProperties=Version=$(fgrep AssemblyInformationalVersion SharedAssemblyInfo.cs|cut -d'"' -f2) -p:SymbolPackageFormat=snupkg
    - name: Nuget push
      if: contains(github.ref,'refs/tags/')
      run: dotnet nuget push NuGet/bin/Release/HIC.FAnsiSql.*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_KEY }} --skip-duplicate
    - name: Store created nupkg files
      uses: actions/upload-artifact@v3
      with:
        path: NuGet/bin/Release/*.nupkg
        retention-days: 1
    - name: Upload release binaries
      if: contains(github.ref,'refs/tags/')
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        file: NuGet/bin/Release/*.nupkg
        file_glob: true
        overwrite: true
